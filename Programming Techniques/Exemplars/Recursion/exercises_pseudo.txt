//----------------------------------------------------------
// Recursive Function Example:
//----------------------------------------------------------

	FUNCTION reverseStrRecursive(string)
		string = str(string) // ensure string is a string
		IF string = '' THEN
			RETURN string
		ELSE
			RETURN reverseStrRecursive(
				string.subString(1, string.length)) +
				string.subString(0, 1))
	END FUNCTION

//----------------------------------------------------------
// Recursion Exercise 1:
//   Write a function to calculate the sum of a list of
//   numbers.
//----------------------------------------------------------

	FUNCTION listSum(nList)
		IF numList.length = 1 THEN
			RETURN numList[0]
		ELSE
			RETURN numList[0] + listSum(numList[1:])
		END IF
	END FUNCTION

//----------------------------------------------------------
// Recursion Exercise 2:
//   Write a function to get the factorial of a non-negative
//   integer.
//----------------------------------------------------------

	FUNCTION factorial(n)
		IF n <= 1 THEN
			RETURN 1
		ELSE
			RETURN n * factorial(n - 1)
		END IF
	END FUNCTION

//----------------------------------------------------------
// Recursion Exercise 3:
//   Write a function to solve the Fibonacci sequence.
//----------------------------------------------------------

	FUNCTION fibonacci(n)
		IF n=1 OR n=2 THEN
			RETURN 1
		ELSE
			RETURN fibonacci(n - 1) + fibonacci(n - 2)
		END IF
	END FUNCTION

//----------------------------------------------------------
// Recursion Exercise 4:
//   Write a function to calculate the sum of an
//   n-dimensional list of numbers.
//----------------------------------------------------------

	FUNCTION nDimensionalListSum(nList)
		total = 0
		FOR i=0 TO nList.length
			IF isInstance(nList[i], list) THEN
				total = total + nDimensionalListSum(nList[i])
			ELSE
				total = total + nList[i]
			END IF
		NEXT i
		RETURN total
	END FUNCTION

//----------------------------------------------------------
// Recursion Exercise 5:
//   Write a function to converting an Integer to a string
//   in any base.
//----------------------------------------------------------

	FUNCTION intToString(n, base)
		digits = "0123456789ABCDEF"
		IF n < base THEN
			RETURN digits[n]
		ELSE
			RETURN intToString(n DIV base, base) + digits[n MOD base]
		END IF
	END FUNCTION
